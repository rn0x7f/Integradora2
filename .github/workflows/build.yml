name: Build

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Actualizado a la versión 4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential gcovr  # Agregado gcovr para informes de cobertura

      - name: Configure, Build, and Test
        run: |
          mkdir -p build  # Asegura que build exista antes de la compilación
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON  # Habilita la cobertura
          cmake --build .
          ctest --output-on-failure
          # Ejecuta gcovr en el directorio correcto para generar coverage.xml
          gcovr -r . --sonarqube --output ../coverage.xml  # Genera coverage.xml en la raíz del proyecto

      - name: List files in root directory
        run: ls -l  # Verifica que coverage.xml se haya generado en la raíz

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4  # Actualizado a la versión 4
        with:
          name: coverage-report
          path: coverage.xml  # Subir desde la raíz del proyecto

  sonar_analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: tests  # Depende del job "tests" para ejecutarse después
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List files in root directory (Sonar)
        run:  |
          ls .. -l  # Verifica que coverage.xml esté disponible
          cat ../coverage.xml  # Verifica el contenido del archivo de cobertura

      - name: Download Coverage Report
        uses: actions/download-artifact@v4  # Actualizado a la versión 4
        with:
          name: coverage-report  # Nombre del artefacto cargado
          path: .  # Ruta donde se descargará el reporte

      - name: Check Coverage Report Content
        run: cat coverage.xml  # Revisa el contenido del archivo de cobertura antes de enviarlo a SonarQube

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_COVERAGE_REPORT_PATHS: coverage.xml  # Ruta del archivo de cobertura en la raíz
