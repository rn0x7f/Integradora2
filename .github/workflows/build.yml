name: Build

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential gcovr

      - name: Configure, Build, and Test
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON
          cmake --build .
          ctest --output-on-failure
          # Añadir --root .. para rutas correctas
          gcovr --root .. --sonarqube --exclude '_deps' --exclude 'tests' --output ../coverage.xml

      - name: List files in root directory
        run: ls -l

      - name: List all files recursively
        run: find . -type f

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Generate Coverage Report
        run: |
          cd build
          gcovr --root .. \
                --sonarqube \
                --exclude '_deps' \
                --exclude 'tests' \
                --output ../coverage.xml

  sonar_analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List files in root directory (Sonar)
        run: ls -l

      - name: List all files recursively (Sonar)
        run: find . -type f

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: Check Coverage Report Content
        run: |
          echo "Mostrando las primeras 100 líneas de coverage.xml:"
          head -n 100 coverage.xml
          echo "Fin del contenido del coverage.xml"

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_COVERAGE_REPORT_PATHS: coverage.xml
